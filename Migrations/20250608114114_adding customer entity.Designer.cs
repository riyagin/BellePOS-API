// <auto-generated />
using System;
using BelleAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BelleAPI.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250608114114_adding customer entity")]
    partial class addingcustomerentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BelleAPI.Models.Entities.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("customer_id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("discount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tax")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BelleAPI.Models.Entities.Transaction_item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Harga")
                        .HasColumnType("numeric");

                    b.Property<int>("Jumlah")
                        .HasColumnType("integer");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KodeItem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Pot")
                        .HasColumnType("double precision");

                    b.Property<string>("Satuan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Transaction_Items");
                });

            modelBuilder.Entity("BelleAPI.Models.Entities.customer", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.Property<string>("NIK")
                        .HasColumnType("text");

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("tgl_lahir")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("BelleAPI.Models.Entities.item", b =>
                {
                    b.Property<string>("kode_item")
                        .HasColumnType("text");

                    b.Property<decimal>("harga")
                        .HasColumnType("numeric");

                    b.Property<string>("jenis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nama_item")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("satuan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("kode_item");

                    b.ToTable("items");
                });

            modelBuilder.Entity("BelleAPI.Models.Entities.payment_detail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<int>("bank_id")
                        .HasColumnType("integer");

                    b.Property<int>("payment_method")
                        .HasColumnType("integer");

                    b.Property<string>("transaction_id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("payment_Details");
                });

            modelBuilder.Entity("BelleAPI.Models.Entities.payment_option", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("bank_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("payment_Options");
                });
#pragma warning restore 612, 618
        }
    }
}
